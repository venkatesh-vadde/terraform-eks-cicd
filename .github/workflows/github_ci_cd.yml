name: CI/CD Pipeline to EKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
env:
  
jobs:
  get-terraform-outputs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActions-EKS-Role
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Get ECR repository URI from Terraform state
      id: get_ecr_uri
      run: |
        cd terraform
        TERRAFORM_INIT_CMD="terraform init -backend-config=\"bucket=terraform-1755977291\" -backend-config=\"key=eks-terraform-project/terraform.tfstate\" -backend-config=\"region=${{ env.AWS_REGION }}\" -backend-config=\"dynamodb_table=terraform-1755977291\""
        eval "$TERRAFORM_INIT_CMD"
        ECR_URI=$(terraform output -raw ecr_repository_uri)
        echo "ECR_URI=${ECR_URI}" >> "$GITHUB_ENV"
    outputs:
      ecr_uri: ${{ steps.get_ecr_uri.outputs.ECR_URI }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: get-terraform-outputs
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.GITHUB_ACTIONS_EKS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build and push image to Amazon ECR
      env:
        ECR_URI: ${{ needs.get-terraform-outputs.outputs.ecr_uri }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_URI:$IMAGE_TAG ./app
        docker push $ECR_URI:$IMAGE_TAG
    outputs:
      image_tag: ${{ github.sha }}
      ecr_uri: ${{ needs.get-terraform-outputs.outputs.ecr_uri }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.GITHUB_ACTIONS_EKS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          ECR_URI="${{ needs.build-and-push.outputs.ecr_uri }}"
          IMAGE_TAG="${{ needs.build-and-push.outputs.image_tag }}"
          sed -i "s|<ECR_REPO_URI>:<BUILD_ID>|${ECR_URI}:${IMAGE_TAG}|g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml